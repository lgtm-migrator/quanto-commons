'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /* eslint-disable no-plusplus */
/**
 * Created by Lucas Teske on 20/04/17.
 * 
 */

exports.isRunningInNodeJS = isRunningInNodeJS;
exports.normalizeXMLJSObjectProperties = normalizeXMLJSObjectProperties;
exports.validateEmail = validateEmail;
exports.validateCPF = validateCPF;
exports.validateCNPJ = validateCNPJ;
exports.undefinedOrNull = undefinedOrNull;
exports.validateField = validateField;
exports.validateDateFormat = validateDateFormat;
exports.validateStringLength = validateStringLength;
exports.calcDvMod11 = calcDvMod11;
exports.calcDvMod11Sub11 = calcDvMod11Sub11;
exports.calcDvAgencia = calcDvAgencia;
exports.calcDvConta = calcDvConta;
exports.calcDvMod10 = calcDvMod10;

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isRunningInNodeJS() {
  return typeof module !== 'undefined' && module.exports;
}

function normalizeXMLJSObjectProperties(obj) {
  var keys = Object.keys(obj);
  var nObj = {};
  for (var i = 0; i < keys.length; i += 1) {
    var k = keys[i];
    if (_typeof(obj[k]) === 'object') {
      normalizeXMLJSObjectProperties(obj[k]);
    }
    var t = JSON.parse(JSON.stringify(obj[k][0]));
    if (t !== 'undefined') {
      nObj[k.toLowerCase()] = t !== 'NULL' ? t : null;
    }
  }

  return nObj;
}

function validateEmail(email) {
  var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  return re.test(email);
}

function validateCPF(cpfO) {
  var sum = 0;
  var hash = void 0;

  if (cpfO === undefined || cpfO === null) {
    return false;
  }

  var cpf = cpfO.replace(/[^\d]+/g, '');

  if (cpf.length !== '00000000000'.length) {
    return false;
  }

  if (cpf === '00000000000') {
    return false;
  }

  for (var i = 1; i <= 9; i++) {
    sum += parseInt(cpf.substring(i - 1, i), 10) * (11 - i);
  }

  hash = sum * 10 % 11;

  if (hash === 10 || hash === 11) {
    hash = 0;
  }

  if (hash !== parseInt(cpf.substring(9, 10), 10)) {
    return false;
  }

  // Verification digit
  sum = 0;
  for (var _i = 1; _i <= 10; _i++) {
    sum += parseInt(cpf.substring(_i - 1, _i), 10) * (12 - _i);
  }

  hash = sum * 10 % 11;

  if (hash === 10 || hash === 11) {
    hash = 0;
  }

  return hash === parseInt(cpf.substring(10, 11), 10);
}

function validateCNPJ(cnpjO) {
  if (cnpjO === undefined || cnpjO === null || cnpjO.length !== 14) {
    return false;
  }

  var cnpj = cnpjO.replace(/[^\d]+/g, '');

  if (cnpj.length === 0 || cnpj.length !== 14 || cnpj === '00000000000000' || cnpj === '11111111111111' || cnpj === '22222222222222' || cnpj === '33333333333333' || cnpj === '44444444444444' || cnpj === '55555555555555' || cnpj === '66666666666666' || cnpj === '77777777777777' || cnpj === '88888888888888' || cnpj === '99999999999999') {
    return false;
  }

  var size = cnpj.length - 2;
  var numbers = cnpj.substring(0, size);
  var digits = cnpj.substring(size);
  var sum = 0;
  var pos = size - 7;
  for (var i = size; i >= 1; i--) {
    sum += parseInt(numbers.charAt(size - i), 10) * pos--;
    if (pos < 2) {
      pos = 9;
    }
  }

  var resultado = sum % 11 < 2 ? 0 : 11 - sum % 11;
  if (resultado !== parseInt(digits.charAt(0), 10)) {
    return false;
  }

  size += 1;
  numbers = cnpj.substring(0, size);
  sum = 0;
  pos = size - 7;

  for (var _i2 = size; _i2 >= 1; _i2--) {
    sum += parseInt(numbers.charAt(size - _i2), 10) * pos--;
    if (pos < 2) {
      pos = 9;
    }
  }
  resultado = sum % 11 < 2 ? 0 : 11 - sum % 11;
  return resultado === parseInt(digits.charAt(1), 10);
}

function undefinedOrNull(field) {
  return field === undefined || field === null;
}

function validateField(fieldValue, validationFn) {
  return validationFn(fieldValue);
}

function validateDateFormat(field, format) {
  return (0, _moment2.default)(field, format, true).isValid();
}

function validateStringLength(field, max, min) {
  return field.length < max && (min !== undefined && field.length > min || min === undefined);
}

function calcDvMod11(data) {
  var sum = 0;
  for (var i = 0; i < data.length; i++) {
    sum += parseInt(data[i], 10) * (data.length - i + 1);
  }
  return sum % 11;
}

function calcDvMod11Sub11(data) {
  var c = calcDvMod11(data);
  return c > 0 ? 11 - c : 0;
}

function calcDvAgencia(branchNumber) {
  return calcDvMod11Sub11(branchNumber.padLeft(4, '0'));
}

function calcDvConta(accountNumber) {
  return calcDvMod11(accountNumber.toString());
}

function calcDvMod10(data) {
  var sum = 0;
  for (var i = 0; i < data.length; i++) {
    var partial = parseInt(data[i], 10) * (i % 2 + 1);
    if (partial > 9) {
      partial = partial.toString().split('').map(function (c) {
        return parseInt(c, 10);
      }).reduce(function (a, b) {
        return a + b;
      });
    }
    sum += partial;
  }
  sum %= 10;
  sum = sum !== 0 ? 10 - sum : sum;

  return sum;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,