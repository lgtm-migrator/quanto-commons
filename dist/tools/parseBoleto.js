/**
 * Created by Nemo on 13/02/19.
 */

'use strict';


 /*
 * Fontes de documentacao sobre boletos:
 * - http://download.itau.com.br/bankline/SISPAG_CNAB.pdf
 * - https://www.bb.com.br/docs/pub/emp/empl/dwn/Doc5175Bloqueto.pdf
 * - https://portal.febraban.org.br/pagina/3150/1094/pt-br/servicos-novo-plataforma-boletos
 * Este código valida a representação numérica do código de barras. Note que os dados da linha digitável não
 * se apresentam na mesma sequência do código de barras.
 *
 * Estrutura do campo digitável:
 *   AAABCCCCCX.DDDDDDDDDDY.EEEEEEEEEEZK.UUUUVVVVVVVVVV
 * a) Campo 1: AAABC.CCCCX
 *   A = Código do BB na COMPE ( 001)
 *   B = Código da moeda ( 9) -Real
 *   C = Posições 20 a 24 do código de barras
 *   X = DV do Campo 1 (Módulo 10, cálculo conforme anexo 7)
 * b) Campo 2: DDDDD.DDDDDY
 *   D = Posições 25 a 34 do código de barras
 *   Y = DV do Campo 2 (Módulo 10, cálculo conforme anexo 7)
 * c) Campo 3: EEEEE.EEEEEZ
 *   F = Posições 35 a 44 do código de barras
 *   Z =DV do Campo 3 (Módulo 10, cálculo conforme anexo 7)
 * Campo 4: K
 *   K = DV do código de barras (Módulo 10, cálculo conforme anexo 107)
 * Campo 5: UUUUVVVVVVVVVV
 *   U = Fator de Vencimento (Módulo 10, cálculo conforme anexo 8)
 *   V = Valor do título (com duas casas decimais, sem ponto e vírgula. Em
 *   caso de moeda variável, informar zeros)
 */

function calcDvMod11(data) {
  var sum = 0;
  for (var i = 0; i < data.length; i++) {
    sum += parseInt(data[i], 10) * (data.length - i + 1);
  }
  return sum % 11;
}

function calcDvMod11Sub11(data) {
  var c = calcDvMod11(data);
  return c > 0 ? 11 - c : 0;
}

function calcDvAgencia(branchNumber) {
  return calcDvMod11Sub11(branchNumber.padLeft(4, '0'));
}

function calcDvConta(accountNumber) {
  return calcDvMod11(accountNumber.toString()) % 10;
}

function calcDvMod10(data) {
  var sum = 0;
  for (var i = 0; i < data.length; i++) {
    var partial = parseInt(data[i], 10) * (i % 2 + 1);
    if (partial > 9) {
      partial = partial.toString().split('').map(function (c) {
        return parseInt(c, 10);
      }).reduce(function (a, b) {
        return a + b;
      });
    }
    sum += partial;
  }
  sum %= 10;
  sum = sum !== 0 ? 10 - sum : sum;

  return sum;
}

var banks = {
  1: 'BANCO DO BRASIL S.A.',
  33: 'BANCO SANTANDER (BRASIL) S.A.',
  237: 'BANCO BRADESCO S.A.',
  341: 'ITAÚ UNIBANCO S.A.',
  633: 'BANCO RENDIMENTO S.A.'
};

var currencies = {
  9: 'real'
};

function getExpiryDate(dateCode) {
  var febrabanBaseDate = new Date(1997, 10, 7);
  return new Date(febrabanBaseDate / 1 + dateCode * 86400000);
}

function parseBoleto(code) {
  var valueIsGreaterThan999999999 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (code < 36) {
    return undefined;
  }
  if (code.length < 47) {
    code.padEnd(47, '0');
  }
  var boleto = {
    bank: undefined,
    currency: undefined,
    verifiableFields: {
      field20to24: {
        value: undefined,
        verifDigit: undefined,
        verified: undefined
      },
      field25to34: {
        value: undefined,
        verifDigit: undefined,
        verified: undefined
      },
      field35to44: {
        value: undefined,
        verifDigit: undefined,
        verified: undefined
      }
    },
    expiryDate: undefined,
    amount: undefined
  };

  boleto.bank = banks[code.substring(0, 3)];
  boleto.currency = currencies[code.substring(3, 4)];
  boleto.verifiableFields.field20to24.value = code.substring(4, 9);
  boleto.verifiableFields.field20to24.verifDigit = code.substring(9, 10);
  boleto.verifiableFields.field25to34.value = code.substring(10, 20);
  boleto.verifiableFields.field25to34.verifDigit = code.substring(20, 21);
  boleto.verifiableFields.field35to44.value = code.substring(21, 31);
  boleto.verifiableFields.field35to44.verifDigit = code.substring(31, 33);

  if (valueIsGreaterThan999999999) {
    boleto.amount = code.substring(33, 47) / 100;
  } else {
    boleto.expiryDate = getExpiryDate(code.substring(33, 37));
    boleto.amount = code.substring(37, 47) / 100;
  }

  return boleto;
}

module.exports = { parseBoleto: parseBoleto };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90b29scy9wYXJzZUJvbGV0by5qcyJdLCJuYW1lcyI6WyJjYWxjRHZNb2QxMSIsImRhdGEiLCJzdW0iLCJpIiwibGVuZ3RoIiwicGFyc2VJbnQiLCJjYWxjRHZNb2QxMVN1YjExIiwiYyIsImNhbGNEdkFnZW5jaWEiLCJicmFuY2hOdW1iZXIiLCJwYWRMZWZ0IiwiY2FsY0R2Q29udGEiLCJhY2NvdW50TnVtYmVyIiwidG9TdHJpbmciLCJjYWxjRHZNb2QxMCIsInBhcnRpYWwiLCJzcGxpdCIsIm1hcCIsInJlZHVjZSIsImEiLCJiIiwiYmFua3MiLCJjdXJyZW5jaWVzIiwiZ2V0RXhwaXJ5RGF0ZSIsImRhdGVDb2RlIiwiZmVicmFiYW5CYXNlRGF0ZSIsIkRhdGUiLCJwYXJzZUJvbGV0byIsImNvZGUiLCJ2YWx1ZUlzR3JlYXRlclRoYW45OTk5OTk5OTkiLCJ1bmRlZmluZWQiLCJwYWRFbmQiLCJib2xldG8iLCJiYW5rIiwiY3VycmVuY3kiLCJ2ZXJpZmlhYmxlRmllbGRzIiwiZmllbGQyMHRvMjQiLCJ2YWx1ZSIsInZlcmlmRGlnaXQiLCJ2ZXJpZmllZCIsImZpZWxkMjV0bzM0IiwiZmllbGQzNXRvNDQiLCJleHBpcnlEYXRlIiwiYW1vdW50Iiwic3Vic3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQ0EsU0FBU0EsV0FBVCxDQUFxQkMsSUFBckIsRUFBMkI7QUFDekIsTUFBSUMsTUFBTSxDQUFWO0FBQ0EsT0FBSyxJQUFJQyxJQUFJLENBQWIsRUFBZ0JBLElBQUlGLEtBQUtHLE1BQXpCLEVBQWlDRCxHQUFqQyxFQUFzQztBQUNwQ0QsV0FBUUcsU0FBU0osS0FBS0UsQ0FBTCxDQUFULEVBQWtCLEVBQWxCLEtBQTBCRixLQUFLRyxNQUFMLEdBQWNELENBQWYsR0FBb0IsQ0FBN0MsQ0FBUjtBQUNEO0FBQ0QsU0FBT0QsTUFBTSxFQUFiO0FBQ0Q7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T0MsT0FBUCxHQUFpQixFQUFFbkIsd0JBQUYsRUFBakIiLCJmaWxlIjoicGFyc2VCb2xldG8uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgTmVtbyBvbiAxMy8wMi8xOS5cbiAqIEBmbG93XG4gKlxuICogRm9udGVzIGRlIGRvY3VtZW50YWNhbyBzb2JyZSBib2xldG9zOlxuICogLSBodHRwOi8vZG93bmxvYWQuaXRhdS5jb20uYnIvYmFua2xpbmUvU0lTUEFHX0NOQUIucGRmXG4gKiAtIGh0dHBzOi8vd3d3LmJiLmNvbS5ici9kb2NzL3B1Yi9lbXAvZW1wbC9kd24vRG9jNTE3NUJsb3F1ZXRvLnBkZlxuICogLSBodHRwczovL3BvcnRhbC5mZWJyYWJhbi5vcmcuYnIvcGFnaW5hLzMxNTAvMTA5NC9wdC1ici9zZXJ2aWNvcy1ub3ZvLXBsYXRhZm9ybWEtYm9sZXRvc1xuICogRXN0ZSBjw7NkaWdvIHZhbGlkYSBhIHJlcHJlc2VudGHDp8OjbyBudW3DqXJpY2EgZG8gY8OzZGlnbyBkZSBiYXJyYXMuIE5vdGUgcXVlIG9zIGRhZG9zIGRhIGxpbmhhIGRpZ2l0w6F2ZWwgbsOjb1xuICogc2UgYXByZXNlbnRhbSBuYSBtZXNtYSBzZXF1w6puY2lhIGRvIGPDs2RpZ28gZGUgYmFycmFzLlxuICpcbiAqIEVzdHJ1dHVyYSBkbyBjYW1wbyBkaWdpdMOhdmVsOlxuICogICBBQUFCQ0NDQ0NYLkRERERERERERERZLkVFRUVFRUVFRUVaSy5VVVVVVlZWVlZWVlZWVlxuICogYSkgQ2FtcG8gMTogQUFBQkMuQ0NDQ1hcbiAqICAgQSA9IEPDs2RpZ28gZG8gQkIgbmEgQ09NUEUgKCAwMDEpXG4gKiAgIEIgPSBDw7NkaWdvIGRhIG1vZWRhICggOSkgLVJlYWxcbiAqICAgQyA9IFBvc2nDp8O1ZXMgMjAgYSAyNCBkbyBjw7NkaWdvIGRlIGJhcnJhc1xuICogICBYID0gRFYgZG8gQ2FtcG8gMSAoTcOzZHVsbyAxMCwgY8OhbGN1bG8gY29uZm9ybWUgYW5leG8gNylcbiAqIGIpIENhbXBvIDI6IERERERELkREREREWVxuICogICBEID0gUG9zacOnw7VlcyAyNSBhIDM0IGRvIGPDs2RpZ28gZGUgYmFycmFzXG4gKiAgIFkgPSBEViBkbyBDYW1wbyAyIChNw7NkdWxvIDEwLCBjw6FsY3VsbyBjb25mb3JtZSBhbmV4byA3KVxuICogYykgQ2FtcG8gMzogRUVFRUUuRUVFRUVaXG4gKiAgIEYgPSBQb3Npw6fDtWVzIDM1IGEgNDQgZG8gY8OzZGlnbyBkZSBiYXJyYXNcbiAqICAgWiA9RFYgZG8gQ2FtcG8gMyAoTcOzZHVsbyAxMCwgY8OhbGN1bG8gY29uZm9ybWUgYW5leG8gNylcbiAqIENhbXBvIDQ6IEtcbiAqICAgSyA9IERWIGRvIGPDs2RpZ28gZGUgYmFycmFzIChNw7NkdWxvIDEwLCBjw6FsY3VsbyBjb25mb3JtZSBhbmV4byAxMDcpXG4gKiBDYW1wbyA1OiBVVVVVVlZWVlZWVlZWVlxuICogICBVID0gRmF0b3IgZGUgVmVuY2ltZW50byAoTcOzZHVsbyAxMCwgY8OhbGN1bG8gY29uZm9ybWUgYW5leG8gOClcbiAqICAgViA9IFZhbG9yIGRvIHTDrXR1bG8gKGNvbSBkdWFzIGNhc2FzIGRlY2ltYWlzLCBzZW0gcG9udG8gZSB2w61yZ3VsYS4gRW1cbiAqICAgY2FzbyBkZSBtb2VkYSB2YXJpw6F2ZWwsIGluZm9ybWFyIHplcm9zKVxuICovXG5cbmZ1bmN0aW9uIGNhbGNEdk1vZDExKGRhdGEpIHtcbiAgbGV0IHN1bSA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgIHN1bSArPSAocGFyc2VJbnQoZGF0YVtpXSwgMTApICogKChkYXRhLmxlbmd0aCAtIGkpICsgMSkpO1xuICB9XG4gIHJldHVybiBzdW0gJSAxMTtcbn1cblxuZnVuY3Rpb24gY2FsY0R2TW9kMTFTdWIxMShkYXRhKSB7XG4gIGNvbnN0IGMgPSBjYWxjRHZNb2QxMShkYXRhKTtcbiAgcmV0dXJuIGMgPiAwID8gMTEgLSBjIDogMDtcbn1cblxuZnVuY3Rpb24gY2FsY0R2QWdlbmNpYShicmFuY2hOdW1iZXIpIHtcbiAgcmV0dXJuIGNhbGNEdk1vZDExU3ViMTEoYnJhbmNoTnVtYmVyLnBhZExlZnQoNCwgJzAnKSk7XG59XG5cbmZ1bmN0aW9uIGNhbGNEdkNvbnRhKGFjY291bnROdW1iZXIpIHtcbiAgcmV0dXJuIGNhbGNEdk1vZDExKGFjY291bnROdW1iZXIudG9TdHJpbmcoKSkgJSAxMDtcbn1cblxuZnVuY3Rpb24gY2FsY0R2TW9kMTAoZGF0YSkge1xuICBsZXQgc3VtID0gMDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IHBhcnRpYWwgPSAocGFyc2VJbnQoZGF0YVtpXSwgMTApICogKChpICUgMikgKyAxKSk7XG4gICAgaWYgKHBhcnRpYWwgPiA5KSB7XG4gICAgICBwYXJ0aWFsID0gcGFydGlhbC50b1N0cmluZygpLnNwbGl0KCcnKS5tYXAoYyA9PiBwYXJzZUludChjLCAxMCkpLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIH1cbiAgICBzdW0gKz0gcGFydGlhbDtcbiAgfVxuICBzdW0gJT0gMTA7XG4gIHN1bSA9IHN1bSAhPT0gMCA/IDEwIC0gc3VtIDogc3VtO1xuXG4gIHJldHVybiBzdW07XG59XG5cbmNvbnN0IGJhbmtzID0ge1xuICAxOiAnQkFOQ08gRE8gQlJBU0lMIFMuQS4nLFxuICAzMzogJ0JBTkNPIFNBTlRBTkRFUiAoQlJBU0lMKSBTLkEuJyxcbiAgMjM3OiAnQkFOQ08gQlJBREVTQ08gUy5BLicsXG4gIDM0MTogJ0lUQcOaIFVOSUJBTkNPIFMuQS4nLFxuICA2MzM6ICdCQU5DTyBSRU5ESU1FTlRPIFMuQS4nLFxufTtcblxuY29uc3QgY3VycmVuY2llcyA9IHtcbiAgOTogJ3JlYWwnLFxufTtcblxuZnVuY3Rpb24gZ2V0RXhwaXJ5RGF0ZShkYXRlQ29kZSkge1xuICBjb25zdCBmZWJyYWJhbkJhc2VEYXRlID0gbmV3IERhdGUoMTk5NywgMTAsIDcpO1xuICByZXR1cm4gbmV3IERhdGUoKGZlYnJhYmFuQmFzZURhdGUgLyAxKSArIChkYXRlQ29kZSAqIDg2NDAwMDAwKSk7XG59XG5cbmZ1bmN0aW9uIHBhcnNlQm9sZXRvKGNvZGUsIHZhbHVlSXNHcmVhdGVyVGhhbjk5OTk5OTk5OSA9IGZhbHNlKSB7XG4gIGlmIChjb2RlIDwgMzYpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIGlmIChjb2RlLmxlbmd0aCA8IDQ3KSB7XG4gICAgY29kZS5wYWRFbmQoNDcsICcwJyk7XG4gIH1cbiAgY29uc3QgYm9sZXRvID0ge1xuICAgIGJhbms6IHVuZGVmaW5lZCxcbiAgICBjdXJyZW5jeTogdW5kZWZpbmVkLFxuICAgIHZlcmlmaWFibGVGaWVsZHM6IHtcbiAgICAgIGZpZWxkMjB0bzI0OiB7XG4gICAgICAgIHZhbHVlOiB1bmRlZmluZWQsXG4gICAgICAgIHZlcmlmRGlnaXQ6IHVuZGVmaW5lZCxcbiAgICAgICAgdmVyaWZpZWQ6IHVuZGVmaW5lZCxcbiAgICAgIH0sXG4gICAgICBmaWVsZDI1dG8zNDoge1xuICAgICAgICB2YWx1ZTogdW5kZWZpbmVkLFxuICAgICAgICB2ZXJpZkRpZ2l0OiB1bmRlZmluZWQsXG4gICAgICAgIHZlcmlmaWVkOiB1bmRlZmluZWQsXG4gICAgICB9LFxuICAgICAgZmllbGQzNXRvNDQ6IHtcbiAgICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgICAgdmVyaWZEaWdpdDogdW5kZWZpbmVkLFxuICAgICAgICB2ZXJpZmllZDogdW5kZWZpbmVkLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGV4cGlyeURhdGU6IHVuZGVmaW5lZCxcbiAgICBhbW91bnQ6IHVuZGVmaW5lZCxcbiAgfTtcblxuICBib2xldG8uYmFuayA9IGJhbmtzW2NvZGUuc3Vic3RyaW5nKDAsIDMpXTtcbiAgYm9sZXRvLmN1cnJlbmN5ID0gY3VycmVuY2llc1tjb2RlLnN1YnN0cmluZygzLCA0KV07XG4gIGJvbGV0by52ZXJpZmlhYmxlRmllbGRzLmZpZWxkMjB0bzI0LnZhbHVlICA9IGNvZGUuc3Vic3RyaW5nKDQsIDkpO1xuICBib2xldG8udmVyaWZpYWJsZUZpZWxkcy5maWVsZDIwdG8yNC52ZXJpZkRpZ2l0ID0gY29kZS5zdWJzdHJpbmcoOSwgMTApO1xuICBib2xldG8udmVyaWZpYWJsZUZpZWxkcy5maWVsZDI1dG8zNC52YWx1ZSAgPSBjb2RlLnN1YnN0cmluZygxMCwgMjApO1xuICBib2xldG8udmVyaWZpYWJsZUZpZWxkcy5maWVsZDI1dG8zNC52ZXJpZkRpZ2l0ID0gY29kZS5zdWJzdHJpbmcoMjAsIDIxKTtcbiAgYm9sZXRvLnZlcmlmaWFibGVGaWVsZHMuZmllbGQzNXRvNDQudmFsdWUgID0gY29kZS5zdWJzdHJpbmcoMjEsIDMxKTtcbiAgYm9sZXRvLnZlcmlmaWFibGVGaWVsZHMuZmllbGQzNXRvNDQudmVyaWZEaWdpdD0gY29kZS5zdWJzdHJpbmcoMzEsIDMzKTtcblxuICBpZiAodmFsdWVJc0dyZWF0ZXJUaGFuOTk5OTk5OTk5KSB7XG4gICAgYm9sZXRvLmFtb3VudCA9IGNvZGUuc3Vic3RyaW5nKDMzLCA0NykgLyAxMDA7XG4gIH0gZWxzZSB7XG4gICAgYm9sZXRvLmV4cGlyeURhdGUgPSBnZXRFeHBpcnlEYXRlKGNvZGUuc3Vic3RyaW5nKDMzLCAzNykpO1xuICAgIGJvbGV0by5hbW91bnQgPSBjb2RlLnN1YnN0cmluZygzNywgNDcpIC8gMTAwO1xuICB9XG5cbiAgcmV0dXJuIGJvbGV0bztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7IHBhcnNlQm9sZXRvIH07XG4iXX0=