'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StatementHistoryCategoryEnumGraphQL = exports.StatementHistoryCategoryEnum = exports.StatementHistoryCategoryGroup = undefined;

var _graphql = require('graphql');

var _StatementHistoryCode = require('./StatementHistoryCode');

/**
 * Created by Lucas Teske on 29/03/18.
 * 
 */
var StatementHistoryCategoryEnum = {
  Other: {
    value: 0,
    description: 'Others (see statement description)'
  },
  InternalTransfer: {
    value: 1,
    description: 'Account Balance Transfers in same bank'
  },
  ExternalTransfer: {
    value: 2,
    description: 'Account Balance Transfers in different banks'
  },
  PaymentAndBilling: {
    value: 3,
    description: 'Payment / Billing Transactions'
  },
  ATM: {
    value: 4,
    description: 'ATM Transactions'
  },
  Escrow: {
    value: 5,
    description: 'Escrow Transactions'
  },
  Fee: {
    value: 6,
    description: 'Fee Transactions'
  }
};

var StatementHistoryCategoryEnumGraphQL = new _graphql.GraphQLEnumType({
  name: 'StatementHistoryCategoryEnum',
  description: 'Statement History Category Enum',
  values: StatementHistoryCategoryEnum
});

var StatementHistoryCategoryGroup = {};

StatementHistoryCategoryGroup[StatementHistoryCategoryEnum.Other.value] = [_StatementHistoryCode.StatementHistoryCodeEnum.Other.value];

StatementHistoryCategoryGroup[StatementHistoryCategoryEnum.InternalTransfer.value] = [_StatementHistoryCode.StatementHistoryCodeEnum.LocalIn.value, _StatementHistoryCode.StatementHistoryCodeEnum.LocalOut.value];

StatementHistoryCategoryGroup[StatementHistoryCategoryEnum.ExternalTransfer.value] = [_StatementHistoryCode.StatementHistoryCodeEnum.ExternalIn.value, _StatementHistoryCode.StatementHistoryCodeEnum.ExternalOut.value, _StatementHistoryCode.StatementHistoryCodeEnum.ExternalRefund.value];

StatementHistoryCategoryGroup[StatementHistoryCategoryEnum.PaymentAndBilling.value] = [_StatementHistoryCode.StatementHistoryCodeEnum.PaymentOut.value, _StatementHistoryCode.StatementHistoryCodeEnum.PaymentRefund.value, _StatementHistoryCode.StatementHistoryCodeEnum.BoletoIn.value, _StatementHistoryCode.StatementHistoryCodeEnum.CronOut.value];

StatementHistoryCategoryGroup[StatementHistoryCategoryEnum.Escrow.value] = [_StatementHistoryCode.StatementHistoryCodeEnum.EscrowLock.value, _StatementHistoryCode.StatementHistoryCodeEnum.EscrowUnlock.value, _StatementHistoryCode.StatementHistoryCodeEnum.EscrowIn.value, _StatementHistoryCode.StatementHistoryCodeEnum.EscrowOut.value];

StatementHistoryCategoryGroup[StatementHistoryCategoryEnum.Fee.value] = [_StatementHistoryCode.StatementHistoryCodeEnum.OtherFees.value, _StatementHistoryCode.StatementHistoryCodeEnum.FeeRefund.value];

exports.StatementHistoryCategoryGroup = StatementHistoryCategoryGroup;
exports.StatementHistoryCategoryEnum = StatementHistoryCategoryEnum;
exports.StatementHistoryCategoryEnumGraphQL = StatementHistoryCategoryEnumGraphQL;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvU3RhdGVtZW50SGlzdG9yeUNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbIlN0YXRlbWVudEhpc3RvcnlDYXRlZ29yeUVudW0iLCJPdGhlciIsInZhbHVlIiwiZGVzY3JpcHRpb24iLCJJbnRlcm5hbFRyYW5zZmVyIiwiRXh0ZXJuYWxUcmFuc2ZlciIsIlBheW1lbnRBbmRCaWxsaW5nIiwiQVRNIiwiRXNjcm93IiwiRmVlIiwiU3RhdGVtZW50SGlzdG9yeUNhdGVnb3J5RW51bUdyYXBoUUwiLCJuYW1lIiwidmFsdWVzIiwiU3RhdGVtZW50SGlzdG9yeUNhdGVnb3J5R3JvdXAiLCJMb2NhbEluIiwiTG9jYWxPdXQiLCJFeHRlcm5hbEluIiwiRXh0ZXJuYWxPdXQiLCJFeHRlcm5hbFJlZnVuZCIsIlBheW1lbnRPdXQiLCJQYXltZW50UmVmdW5kIiwiQm9sZXRvSW4iLCJDcm9uT3V0IiwiRXNjcm93TG9jayIsIkVzY3Jvd1VubG9jayIsIkVzY3Jvd0luIiwiRXNjcm93T3V0IiwiT3RoZXJGZWVzIiwiRmVlUmVmdW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUE7O0FBSUE7O0FBUkE7Ozs7QUFZQSxJQUFNQSwrQkFBK0I7QUFDbkNDLFNBQU87QUFDTEMsV0FBTyxDQURGO0FBRUxDLGlCQUFhO0FBRlIsR0FENEI7QUFLbkNDLG9CQUFrQjtBQUNoQkYsV0FBTyxDQURTO0FBRWhCQyxpQkFBYTtBQUZHLEdBTGlCO0FBU25DRSxvQkFBa0I7QUFDaEJILFdBQU8sQ0FEUztBQUVoQkMsaUJBQWE7QUFGRyxHQVRpQjtBQWFuQ0cscUJBQW1CO0FBQ2pCSixXQUFPLENBRFU7QUFFakJDLGlCQUFhO0FBRkksR0FiZ0I7QUFpQm5DSSxPQUFLO0FBQ0hMLFdBQU8sQ0FESjtBQUVIQyxpQkFBYTtBQUZWLEdBakI4QjtBQXFCbkNLLFVBQVE7QUFDTk4sV0FBTyxDQUREO0FBRU5DLGlCQUFhO0FBRlAsR0FyQjJCO0FBeUJuQ00sT0FBSztBQUNIUCxXQUFPLENBREo7QUFFSEMsaUJBQWE7QUFGVjtBQXpCOEIsQ0FBckM7O0FBK0JBLElBQU1PLHNDQUFzQyw2QkFBb0I7QUFDOURDLFFBQU0sOEJBRHdEO0FBRTlEUixlQUFhLGlDQUZpRDtBQUc5RFMsVUFBUVo7QUFIc0QsQ0FBcEIsQ0FBNUM7O0FBTUEsSUFBTWEsZ0NBQWdDLEVBQXRDOztBQUVBQSw4QkFBOEJiLDZCQUE2QkMsS0FBN0IsQ0FBbUNDLEtBQWpFLElBQTBFLENBQ3hFLCtDQUF5QkQsS0FBekIsQ0FBK0JDLEtBRHlDLENBQTFFOztBQUlBVyw4QkFBOEJiLDZCQUE2QkksZ0JBQTdCLENBQThDRixLQUE1RSxJQUFxRixDQUNuRiwrQ0FBeUJZLE9BQXpCLENBQWlDWixLQURrRCxFQUVuRiwrQ0FBeUJhLFFBQXpCLENBQWtDYixLQUZpRCxDQUFyRjs7QUFLQVcsOEJBQThCYiw2QkFBNkJLLGdCQUE3QixDQUE4Q0gsS0FBNUUsSUFBcUYsQ0FDbkYsK0NBQXlCYyxVQUF6QixDQUFvQ2QsS0FEK0MsRUFFbkYsK0NBQXlCZSxXQUF6QixDQUFxQ2YsS0FGOEMsRUFHbkYsK0NBQXlCZ0IsY0FBekIsQ0FBd0NoQixLQUgyQyxDQUFyRjs7QUFNQVcsOEJBQThCYiw2QkFBNkJNLGlCQUE3QixDQUErQ0osS0FBN0UsSUFBc0YsQ0FDcEYsK0NBQXlCaUIsVUFBekIsQ0FBb0NqQixLQURnRCxFQUVwRiwrQ0FBeUJrQixhQUF6QixDQUF1Q2xCLEtBRjZDLEVBR3BGLCtDQUF5Qm1CLFFBQXpCLENBQWtDbkIsS0FIa0QsRUFJcEYsK0NBQXlCb0IsT0FBekIsQ0FBaUNwQixLQUptRCxDQUF0Rjs7QUFPQVcsOEJBQThCYiw2QkFBNkJRLE1BQTdCLENBQW9DTixLQUFsRSxJQUEyRSxDQUN6RSwrQ0FBeUJxQixVQUF6QixDQUFvQ3JCLEtBRHFDLEVBRXpFLCtDQUF5QnNCLFlBQXpCLENBQXNDdEIsS0FGbUMsRUFHekUsK0NBQXlCdUIsUUFBekIsQ0FBa0N2QixLQUh1QyxFQUl6RSwrQ0FBeUJ3QixTQUF6QixDQUFtQ3hCLEtBSnNDLENBQTNFOztBQU9BVyw4QkFBOEJiLDZCQUE2QlMsR0FBN0IsQ0FBaUNQLEtBQS9ELElBQXdFLENBQ3RFLCtDQUF5QnlCLFNBQXpCLENBQW1DekIsS0FEbUMsRUFFdEUsK0NBQXlCMEIsU0FBekIsQ0FBbUMxQixLQUZtQyxDQUF4RTs7UUFNRVcsNkIsR0FBQUEsNkI7UUFDQWIsNEIsR0FBQUEsNEI7UUFDQVUsbUMsR0FBQUEsbUMiLCJmaWxlIjoiU3RhdGVtZW50SGlzdG9yeUNhdGVnb3J5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IEx1Y2FzIFRlc2tlIG9uIDI5LzAzLzE4LlxuICogQGZsb3dcbiAqL1xuaW1wb3J0IHtcbiAgR3JhcGhRTEVudW1UeXBlLFxufSBmcm9tICdncmFwaHFsJztcblxuaW1wb3J0IHtcbiAgU3RhdGVtZW50SGlzdG9yeUNvZGVFbnVtLFxufSBmcm9tICcuL1N0YXRlbWVudEhpc3RvcnlDb2RlJztcblxuY29uc3QgU3RhdGVtZW50SGlzdG9yeUNhdGVnb3J5RW51bSA9IHtcbiAgT3RoZXI6IHtcbiAgICB2YWx1ZTogMCxcbiAgICBkZXNjcmlwdGlvbjogJ090aGVycyAoc2VlIHN0YXRlbWVudCBkZXNjcmlwdGlvbiknLFxuICB9LFxuICBJbnRlcm5hbFRyYW5zZmVyOiB7XG4gICAgdmFsdWU6IDEsXG4gICAgZGVzY3JpcHRpb246ICdBY2NvdW50IEJhbGFuY2UgVHJhbnNmZXJzIGluIHNhbWUgYmFuaycsXG4gIH0sXG4gIEV4dGVybmFsVHJhbnNmZXI6IHtcbiAgICB2YWx1ZTogMixcbiAgICBkZXNjcmlwdGlvbjogJ0FjY291bnQgQmFsYW5jZSBUcmFuc2ZlcnMgaW4gZGlmZmVyZW50IGJhbmtzJyxcbiAgfSxcbiAgUGF5bWVudEFuZEJpbGxpbmc6IHtcbiAgICB2YWx1ZTogMyxcbiAgICBkZXNjcmlwdGlvbjogJ1BheW1lbnQgLyBCaWxsaW5nIFRyYW5zYWN0aW9ucycsXG4gIH0sXG4gIEFUTToge1xuICAgIHZhbHVlOiA0LFxuICAgIGRlc2NyaXB0aW9uOiAnQVRNIFRyYW5zYWN0aW9ucycsXG4gIH0sXG4gIEVzY3Jvdzoge1xuICAgIHZhbHVlOiA1LFxuICAgIGRlc2NyaXB0aW9uOiAnRXNjcm93IFRyYW5zYWN0aW9ucycsXG4gIH0sXG4gIEZlZToge1xuICAgIHZhbHVlOiA2LFxuICAgIGRlc2NyaXB0aW9uOiAnRmVlIFRyYW5zYWN0aW9ucycsXG4gIH1cbn07XG5cbmNvbnN0IFN0YXRlbWVudEhpc3RvcnlDYXRlZ29yeUVudW1HcmFwaFFMID0gbmV3IEdyYXBoUUxFbnVtVHlwZSh7XG4gIG5hbWU6ICdTdGF0ZW1lbnRIaXN0b3J5Q2F0ZWdvcnlFbnVtJyxcbiAgZGVzY3JpcHRpb246ICdTdGF0ZW1lbnQgSGlzdG9yeSBDYXRlZ29yeSBFbnVtJyxcbiAgdmFsdWVzOiBTdGF0ZW1lbnRIaXN0b3J5Q2F0ZWdvcnlFbnVtLFxufSk7XG5cbmNvbnN0IFN0YXRlbWVudEhpc3RvcnlDYXRlZ29yeUdyb3VwID0ge307XG5cblN0YXRlbWVudEhpc3RvcnlDYXRlZ29yeUdyb3VwW1N0YXRlbWVudEhpc3RvcnlDYXRlZ29yeUVudW0uT3RoZXIudmFsdWVdID0gW1xuICBTdGF0ZW1lbnRIaXN0b3J5Q29kZUVudW0uT3RoZXIudmFsdWUsXG5dO1xuXG5TdGF0ZW1lbnRIaXN0b3J5Q2F0ZWdvcnlHcm91cFtTdGF0ZW1lbnRIaXN0b3J5Q2F0ZWdvcnlFbnVtLkludGVybmFsVHJhbnNmZXIudmFsdWVdID0gW1xuICBTdGF0ZW1lbnRIaXN0b3J5Q29kZUVudW0uTG9jYWxJbi52YWx1ZSxcbiAgU3RhdGVtZW50SGlzdG9yeUNvZGVFbnVtLkxvY2FsT3V0LnZhbHVlLFxuXTtcblxuU3RhdGVtZW50SGlzdG9yeUNhdGVnb3J5R3JvdXBbU3RhdGVtZW50SGlzdG9yeUNhdGVnb3J5RW51bS5FeHRlcm5hbFRyYW5zZmVyLnZhbHVlXSA9IFtcbiAgU3RhdGVtZW50SGlzdG9yeUNvZGVFbnVtLkV4dGVybmFsSW4udmFsdWUsXG4gIFN0YXRlbWVudEhpc3RvcnlDb2RlRW51bS5FeHRlcm5hbE91dC52YWx1ZSxcbiAgU3RhdGVtZW50SGlzdG9yeUNvZGVFbnVtLkV4dGVybmFsUmVmdW5kLnZhbHVlLFxuXTtcblxuU3RhdGVtZW50SGlzdG9yeUNhdGVnb3J5R3JvdXBbU3RhdGVtZW50SGlzdG9yeUNhdGVnb3J5RW51bS5QYXltZW50QW5kQmlsbGluZy52YWx1ZV0gPSBbXG4gIFN0YXRlbWVudEhpc3RvcnlDb2RlRW51bS5QYXltZW50T3V0LnZhbHVlLFxuICBTdGF0ZW1lbnRIaXN0b3J5Q29kZUVudW0uUGF5bWVudFJlZnVuZC52YWx1ZSxcbiAgU3RhdGVtZW50SGlzdG9yeUNvZGVFbnVtLkJvbGV0b0luLnZhbHVlLFxuICBTdGF0ZW1lbnRIaXN0b3J5Q29kZUVudW0uQ3Jvbk91dC52YWx1ZSxcbl07XG5cblN0YXRlbWVudEhpc3RvcnlDYXRlZ29yeUdyb3VwW1N0YXRlbWVudEhpc3RvcnlDYXRlZ29yeUVudW0uRXNjcm93LnZhbHVlXSA9IFtcbiAgU3RhdGVtZW50SGlzdG9yeUNvZGVFbnVtLkVzY3Jvd0xvY2sudmFsdWUsXG4gIFN0YXRlbWVudEhpc3RvcnlDb2RlRW51bS5Fc2Nyb3dVbmxvY2sudmFsdWUsXG4gIFN0YXRlbWVudEhpc3RvcnlDb2RlRW51bS5Fc2Nyb3dJbi52YWx1ZSxcbiAgU3RhdGVtZW50SGlzdG9yeUNvZGVFbnVtLkVzY3Jvd091dC52YWx1ZSxcbl07XG5cblN0YXRlbWVudEhpc3RvcnlDYXRlZ29yeUdyb3VwW1N0YXRlbWVudEhpc3RvcnlDYXRlZ29yeUVudW0uRmVlLnZhbHVlXSA9IFtcbiAgU3RhdGVtZW50SGlzdG9yeUNvZGVFbnVtLk90aGVyRmVlcy52YWx1ZSxcbiAgU3RhdGVtZW50SGlzdG9yeUNvZGVFbnVtLkZlZVJlZnVuZC52YWx1ZSxcbl07XG5cbmV4cG9ydCB7XG4gIFN0YXRlbWVudEhpc3RvcnlDYXRlZ29yeUdyb3VwLFxuICBTdGF0ZW1lbnRIaXN0b3J5Q2F0ZWdvcnlFbnVtLFxuICBTdGF0ZW1lbnRIaXN0b3J5Q2F0ZWdvcnlFbnVtR3JhcGhRTCxcbn07XG4iXX0=